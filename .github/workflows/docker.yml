name: Build Docker image

on:
  push:
    branches: ["master"] # Publish as Docker "latest"
    tags: ["*"]
  pull_request:
    # Only rebuild Docker images if a PR affects it specifically to avoid
    # redundant work since the main workflow already deals with testing builds
    paths:
      - Dockerfile
      - docker-compose.build.yaml
      - .github/workflows/docker.yml

jobs:
  build:
    runs-on: ubuntu-latest
    if: >-
      !(
        contains(github.event.head_commit.message, '[ci skip]') ||
        contains(github.event.head_commit.message, '[skip ci]') ||
        contains(github.event.head_commit.message, '[actions skip]') ||
        contains(github.event.head_commit.message, '[skip actions]') ||
        contains(github.event.head_commit.message, '[skip build]') ||
        contains(github.event.head_commit.message, '[build skip]')
      )
    steps:
      - uses: actions/checkout@v2
      - name: Infer image tag
        if: github.event_name == 'push'
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Use Docker `latest` tag convention
          [[ "$VERSION" == "master" ]] && VERSION=latest
          echo "EMCEE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Login to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Build image
        run: |
          docker-compose -f docker-compose.build.yaml pull
          docker-compose -f docker-compose.build.yaml build --pull
      - name: Push image
        # See also https://docs.docker.com/docker-hub/builds/
        if: github.event_name == 'push'
        run: |
          docker-compose -f docker-compose.build.yaml push
